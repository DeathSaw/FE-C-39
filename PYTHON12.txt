EXP 12: MULTITHREADING

import threading

class TicketCounter:

	def __init__(self):
		self.available_tickets = 1
		self.lock = threading.Lock()

	def book_ticket(self, customer_name, num_tickets):
		self.lock.acquire()
		if self.available_tickets > 0:
			print(f"{customer_name} has booked {num_tickets} ticket")
			self.available_tickets -= num_tickets
		else:		
			print(f"Sorry {customer_name}, there are no tickets available")
		self.lock.release()

counter = TicketCounter()

def customer1():
	counter.book_ticket("John", 1)
def customer2():
      counter.book_ticket("Kate", 1)

t1 = threading.Thread(target=customer1)
t2 = threading.Thread(target=customer2)

t1.start()
t2.start()

t1.join()
t2.join()
