EXP7: Implement Linked List using python

CODE:
class Node:
    def _init_(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def _init_(self):
        self.head = None
        
    # function to add an element to the linked list
    def add_element(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
        else:
            current = self.head
            while current.next is not None:
                current = current.next
            current.next = new_node
        
    # function to remove an element from the linked list
    def remove_element(self, data):
        if self.head is None:
            print("List is empty!")
            return
        elif self.head.data == data:
            self.head = self.head.next
        else:
            current = self.head
            while current.next is not None:
                if current.next.data == data:
                    current.next = current.next.next
                    return
                current = current.next
            print("Element not found in the list!")
    
    # function to replace an element in the linked list
    def replace_element(self, old_data, new_data):
        if self.head is None:
            print("List is empty!")
            return
        current = self.head
        while current is not None:
            if current.data == old_data:
                current.data = new_data
                return
            current = current.next
        print("Element not found in the list!")
        
    # function to search for an element in the linked list
    def search_element(self, data):
        if self.head is None:
            print("List is empty!")
            return
        current = self.head
        while current is not None:
            if current.data == data:
                print("Element found in the list!")
                return
            current = current.next
        print("Element not found in the list!")
        
    # function to display the linked list
    def display_list(self):
        if self.head is None:
            print("List is empty!")
        else:
            current = self.head
            while current is not None:
                print(current.data)
                current = current.next


# main program
my_list = LinkedList()

while True:
    print("\nMenu:")
    print("1. Add an element")
    print("2. Remove an element")
    print("3. Replace an element")
    print("4. Search for an element")
    print("5. Display the linked list")
    print("6. Quit")
    
    choice = int(input("Enter your choice: "))
    
    if choice == 1:
        data = input("Enter the element to add: ")
        my_list.add_element(data)
    elif choice == 2:
        data = input("Enter the element to remove: ")
        my_list.remove_element(data)
    elif choice == 3:
        old_data = input("Enter the element to replace: ")
        new_data = input("Enter the new element: ")
        my_list.replace_element(old_data, new_data)
    elif choice == 4:
        data = input("Enter the element to search for: ")
        my_list.search_element(data)
    elif choice == 5:
        my_list.display_list()
    elif choice == 6:
        break
    else:
        print("Incorrect option!")

OUTPUT:
Menu:
1. Add an element
2. Remove an element
3. Replace an element
4. Search for an element
5. Display the linked list
6. Quit
Enter your choice: 1
Enter the element to add: 5

Menu:
1. Add an element
2. Remove an element
3. Replace an element
4. Search for an element
5. Display the linked list
6. Quit
Enter your choice: 1
Enter the element to add: 9

Menu:
1. Add an element
2. Remove an element
3. Replace an element
4. Search for an element
5. Display the linked list
6. Quit
Enter your choice: 1
Enter the element to add: 6

Menu:
1. Add an element
2. Remove an element
3. Replace an element
4. Search for an element
5. Display the linked list
6. Quit
Enter your choice: 5
5
9
6

Menu:
1. Add an element
2. Remove an element
3. Replace an element
4. Search for an element
5. Display the linked list
6. Quit
Enter your choice: 3
Enter the element to replace: 6
Enter the new element: 7

Menu:
1. Add an element
2. Remove an element
3. Replace an element
4. Search for an element
5. Display the linked list
6. Quit
Enter your choice: 4
Enter the element to search for: 7
Element found in the list!

Menu:
1. Add an element
2. Remove an element
3. Replace an element
4. Search for an element
5. Display the linked list
6. Quit
Enter your choice: 2
Enter the element to remove: 7

Menu:
1. Add an element
2. Remove an element
3. Replace an element
4. Search for an element
5. Display the linked list
6. Quit
Enter your choice: 5
5
9

Menu:
1. Add an element
2. Remove an element
3. Replace an element
4. Search for an element
5. Display the linked list
6. Quit
Enter your choice: 6